{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { PostsSortBy } from '../config';\n;\nconst initialState = {\n  posts: [],\n  sortBy: PostsSortBy.Id\n};\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    setPosts(state, action) {\n      state.posts = action.payload;\n    }\n  }\n});\nexport const {\n  setPosts\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","PostsSortBy","initialState","posts","sortBy","Id","postsSlice","name","reducers","setPosts","state","action","payload","actions","reducer"],"sources":["/home/lino/Documents/projects/business-sector-test-task/src/store/posts.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\n\nimport { IPost } from '../types';\nimport { PostsSortBy } from '../config';\n\nexport interface IPostsState {\n  posts: IPost[];\n  sortBy: keyof typeof PostsSortBy;\n};\n\nconst initialState: IPostsState = {\n  posts: [],\n  sortBy: PostsSortBy.Id\n};\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    setPosts(state, action: PayloadAction<IPost[]>) {\n      state.posts = action.payload;\n    },\n  },\n});\n\nexport const { setPosts } = postsSlice.actions;\nexport default postsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAI9C,SAASC,WAAW,QAAQ,WAAW;AAKtC;AAED,MAAMC,YAAyB,GAAG;EAChCC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAEH,WAAW,CAACI;AACtB,CAAC;AAED,MAAMC,UAAU,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACRC,QAAQA,CAACC,KAAK,EAAEC,MAA8B,EAAE;MAC9CD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAS,CAAC,GAAGH,UAAU,CAACO,OAAO;AAC9C,eAAeP,UAAU,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}