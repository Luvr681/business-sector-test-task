{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n;\nconst initialState = {\n  posts: []\n};\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    setPosts(state, action) {\n      Object.keys(state).forEach(key => {\n        console.log(key + \": \");\n      });\n      state.posts = action.payload.length ? action.payload : [];\n    }\n  }\n});\nexport const {\n  setPosts\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","posts","postsSlice","name","reducers","setPosts","state","action","Object","keys","forEach","key","console","log","payload","length","actions","reducer"],"sources":["/home/lino/Documents/projects/business-sector-test-task/src/store/posts.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\nimport { IPost } from '../types';\n\nexport interface IPostsState {\n  posts: IPost[];\n};\n\nconst initialState: IPostsState = {\n  posts: [],\n};\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    setPosts(state, action: PayloadAction<IPost[]>) {\n      Object.keys(state).forEach(key => {\n        console.log(key + \": \");\n      })\n      state.posts = action.payload.length ? action.payload : [];\n    },\n  },\n});\n\nexport const { setPosts } = postsSlice.actions;\nexport default postsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAM7C;AAED,MAAMC,YAAyB,GAAG;EAChCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,QAAQA,CAACC,KAAK,EAAEC,MAA8B,EAAE;MAC9CC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;QAChCC,OAAO,CAACC,GAAG,CAACF,GAAG,GAAG,IAAI,CAAC;MACzB,CAAC,CAAC;MACFL,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACO,OAAO,CAACC,MAAM,GAAGR,MAAM,CAACO,OAAO,GAAG,EAAE;IAC3D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET;AAAS,CAAC,GAAGH,UAAU,CAACc,OAAO;AAC9C,eAAed,UAAU,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}