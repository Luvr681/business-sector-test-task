{"ast":null,"code":"var _jsxFileName = \"/home/lino/Documents/projects/business-sector-test-task/src/components/NavBar.tsx\",\n  _s = $RefreshSig$();\nimport { useAppSelector } from '../hooks/storeHooks';\nimport { config } from '../config.d';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useAppDispatch } from '../hooks/storeHooks';\nimport { setPostPageCount } from '../store/postPageCount';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NavBar({\n  navigationLimits,\n  setNavigationLimits\n}) {\n  _s();\n  const dispatch = useAppDispatch();\n  const postPageCount = useParams().postPageCount || 0;\n  const [posts, _] = useAppSelector(state => {\n    return [state.posts.posts, state.searchString.searchString];\n  });\n  const pageNumbersCount = posts.length / config.maxPostsQuantity || 1;\n  useEffect(() => {\n    dispatch(setPostPageCount(+postPageCount));\n  }, []);\n  useEffect(() => {\n    let [start, end] = [+postPageCount - 1, +postPageCount + config.maxNavBarPageButtonsCount - 1];\n    const halfNavBarPageButtonsCount = Math.floor(config.maxNavBarPageButtonsCount / 2);\n    if (+postPageCount - halfNavBarPageButtonsCount <= 0) {\n      start = config.defaultNavigationMin;\n      end = Math.min(start + config.maxNavBarPageButtonsCount, pageNumbersCount);\n    }\n    if (+postPageCount + halfNavBarPageButtonsCount > pageNumbersCount) {\n      end = pageNumbersCount;\n      start = end - config.maxNavBarPageButtonsCount;\n    }\n    setNavigationLimits({\n      min: start,\n      max: end\n    });\n  }, [postPageCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-between w-11/12 mx-auto py-4 px-4\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/' + Math.max(+postPageCount - 1, 1),\n      className: \"text-3xl font-semibold\",\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center\",\n      children: Array(pageNumbersCount).fill(0).map((_, idx) => idx + 1).slice(navigationLimits.min, navigationLimits.max).map(pageCount => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          className: `mr-4 font-bold italic text-lg color-${pageCount === +postPageCount ? \"green\" : \"gray\"}`,\n          to: '/' + pageCount,\n          children: pageCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/' + Math.min(+postPageCount + 1, pageNumbersCount),\n      className: \"text-3xl font-semibold\",\n      children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"Cs7dAfFE6vMjsZ5ELmCYVbjbc+U=\", false, function () {\n  return [useAppDispatch, useParams, useAppSelector];\n});\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["useAppSelector","config","useParams","useEffect","useAppDispatch","setPostPageCount","Link","jsxDEV","_jsxDEV","NavBar","navigationLimits","setNavigationLimits","_s","dispatch","postPageCount","posts","_","state","searchString","pageNumbersCount","length","maxPostsQuantity","start","end","maxNavBarPageButtonsCount","halfNavBarPageButtonsCount","Math","floor","defaultNavigationMin","min","max","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","Array","fill","map","idx","slice","pageCount","_c","$RefreshReg$"],"sources":["/home/lino/Documents/projects/business-sector-test-task/src/components/NavBar.tsx"],"sourcesContent":["import { useAppSelector } from '../hooks/storeHooks';\nimport { RootState } from '../store';\nimport { config } from '../config.d';\nimport { useParams } from 'react-router-dom';\n\nimport { useEffect } from 'react';\n\nimport { useAppDispatch } from '../hooks/storeHooks';\nimport { setPostPageCount } from '../store/postPageCount';\nimport { Link } from 'react-router-dom';\nimport { filterPostsBy } from '../lib/filterPostsBy';\nimport { INavigationLimits } from '../types';\n\ninterface IProps {\n  navigationLimits: INavigationLimits;\n  setNavigationLimits: React.Dispatch<React.SetStateAction<INavigationLimits>>;\n}\n\nexport function NavBar({ navigationLimits, setNavigationLimits }: IProps) {\n  const dispatch = useAppDispatch();\n\n  const postPageCount = useParams().postPageCount || 0;\n  const [posts, _] = useAppSelector((state: RootState) => {\n    return [state.posts.posts, state.searchString.searchString]\n  });\n  const pageNumbersCount = posts.length / config.maxPostsQuantity || 1;\n\n  useEffect(() => {\n    dispatch(setPostPageCount(+postPageCount));\n  }, []);\n\n  useEffect(() => {\n    let [start, end] = [(+postPageCount - 1), (+postPageCount) + config.maxNavBarPageButtonsCount - 1];\n    const halfNavBarPageButtonsCount = Math.floor(config.maxNavBarPageButtonsCount / 2);\n\n    if (+postPageCount - halfNavBarPageButtonsCount <= 0) {\n      start = config.defaultNavigationMin;\n      end = Math.min(start + config.maxNavBarPageButtonsCount, pageNumbersCount);\n    }\n    if (+postPageCount + halfNavBarPageButtonsCount > pageNumbersCount) {\n      end = pageNumbersCount;\n      start = end - config.maxNavBarPageButtonsCount;\n    }\n\n    setNavigationLimits({ min: start, max: end });\n  }, [postPageCount]);\n\n  return (\n    <div className='flex items-center justify-between w-11/12 mx-auto py-4 px-4'>\n      <Link to={'/' + Math.max((+postPageCount - 1), 1)} className='text-3xl font-semibold'>Назад</Link>\n      <div className='flex items-center justify-center'>\n        {\n          Array(pageNumbersCount)\n            .fill(0)\n            .map((_, idx) => idx + 1)\n            .slice(navigationLimits.min, navigationLimits.max)\n            .map(pageCount => {\n              return (\n                <Link\n                  className={`mr-4 font-bold italic text-lg color-${pageCount === +postPageCount ? \"green\" : \"gray\"}`}\n                  to={'/' + pageCount}>\n                  {pageCount}\n                </Link>\n              );\n            })\n        }\n      </div>\n      <Link to={'/' + Math.min((+postPageCount + 1), pageNumbersCount)} className='text-3xl font-semibold'>Далее</Link>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}