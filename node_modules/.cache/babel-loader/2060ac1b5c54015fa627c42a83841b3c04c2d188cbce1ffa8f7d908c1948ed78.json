{"ast":null,"code":"import { config } from \"../config.d\";\nexport function defineNavBarLimits(postPageCount, maxPagesCount) {\n  let [start, end] = [+postPageCount - 1, +postPageCount + config.maxNavBarPageButtonsCount - 1];\n  const halfNavBarPageButtonsCount = Math.floor(config.maxNavBarPageButtonsCount / 2);\n  if (+postPageCount - halfNavBarPageButtonsCount <= 0) {\n    start = config.defaultNavigationMin;\n    end = Math.min(start + config.maxNavBarPageButtonsCount, maxPagesCount);\n    return [start, end];\n  }\n  if (+postPageCount + halfNavBarPageButtonsCount > maxPagesCount) {\n    end = maxPagesCount;\n    start = end - config.maxNavBarPageButtonsCount;\n    return [start, end];\n  }\n  start = +postPageCount - halfNavBarPageButtonsCount - 1;\n  end = +postPageCount + halfNavBarPageButtonsCount;\n  return [start, end];\n}","map":{"version":3,"names":["config","defineNavBarLimits","postPageCount","maxPagesCount","start","end","maxNavBarPageButtonsCount","halfNavBarPageButtonsCount","Math","floor","defaultNavigationMin","min"],"sources":["/home/lino/Documents/projects/business-sector-test-task/src/lib/defineNavBarLimits.ts"],"sourcesContent":["import { config } from \"../config.d\";\n\nexport function defineNavBarLimits(postPageCount: number, maxPagesCount: number) {\n  let [start, end] = [(+postPageCount - 1), (+postPageCount) + config.maxNavBarPageButtonsCount - 1];\n  const halfNavBarPageButtonsCount = Math.floor(config.maxNavBarPageButtonsCount / 2);\n\n  if (+postPageCount - halfNavBarPageButtonsCount <= 0) {\n    start = config.defaultNavigationMin;\n    end = Math.min(start + config.maxNavBarPageButtonsCount, maxPagesCount);\n    return [start, end];\n  }\n  if (+postPageCount + halfNavBarPageButtonsCount > maxPagesCount) {\n    end = maxPagesCount;\n    start = end - config.maxNavBarPageButtonsCount;\n    return [start, end];\n  }\n\n  start = +postPageCount - halfNavBarPageButtonsCount - 1;\n  end = +postPageCount + halfNavBarPageButtonsCount;\n\n  return [start, end];\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;AAEpC,OAAO,SAASC,kBAAkBA,CAACC,aAAqB,EAAEC,aAAqB,EAAE;EAC/E,IAAI,CAACC,KAAK,EAAEC,GAAG,CAAC,GAAG,CAAE,CAACH,aAAa,GAAG,CAAC,EAAI,CAACA,aAAa,GAAIF,MAAM,CAACM,yBAAyB,GAAG,CAAC,CAAC;EAClG,MAAMC,0BAA0B,GAAGC,IAAI,CAACC,KAAK,CAACT,MAAM,CAACM,yBAAyB,GAAG,CAAC,CAAC;EAEnF,IAAI,CAACJ,aAAa,GAAGK,0BAA0B,IAAI,CAAC,EAAE;IACpDH,KAAK,GAAGJ,MAAM,CAACU,oBAAoB;IACnCL,GAAG,GAAGG,IAAI,CAACG,GAAG,CAACP,KAAK,GAAGJ,MAAM,CAACM,yBAAyB,EAAEH,aAAa,CAAC;IACvE,OAAO,CAACC,KAAK,EAAEC,GAAG,CAAC;EACrB;EACA,IAAI,CAACH,aAAa,GAAGK,0BAA0B,GAAGJ,aAAa,EAAE;IAC/DE,GAAG,GAAGF,aAAa;IACnBC,KAAK,GAAGC,GAAG,GAAGL,MAAM,CAACM,yBAAyB;IAC9C,OAAO,CAACF,KAAK,EAAEC,GAAG,CAAC;EACrB;EAEAD,KAAK,GAAG,CAACF,aAAa,GAAGK,0BAA0B,GAAG,CAAC;EACvDF,GAAG,GAAG,CAACH,aAAa,GAAGK,0BAA0B;EAEjD,OAAO,CAACH,KAAK,EAAEC,GAAG,CAAC;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}