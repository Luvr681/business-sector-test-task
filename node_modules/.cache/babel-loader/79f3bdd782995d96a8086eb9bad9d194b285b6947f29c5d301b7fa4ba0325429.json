{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n;\nconst initialState = {\n  posts: []\n};\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    filterPosts(state, action) {\n      const filterBy = action.payload;\n      const filteredPosts = [];\n      state.posts.forEach(post => {\n        if (post.title.includes(filterBy) || post.body.includes(filterBy) || post.id === +filterBy) {\n          filteredPosts.push(post);\n        }\n      });\n      setPosts(filterPosts);\n    },\n    setPosts(state, action) {\n      state.posts = action.payload.length ? action.payload : [];\n    }\n  }\n});\nexport const {\n  setPosts,\n  filterPosts\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","posts","postsSlice","name","reducers","filterPosts","state","action","filterBy","payload","filteredPosts","forEach","post","title","includes","body","id","push","setPosts","length","actions","reducer"],"sources":["/home/lino/Documents/projects/business-sector-test-task/src/store/posts.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\nimport { IPost } from '../types';\n\nexport interface IPostsState {\n  posts: IPost[];\n};\n\nconst initialState: IPostsState = {\n  posts: [],\n};\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    filterPosts(state, action: PayloadAction<string>) {\n      const filterBy = action.payload;\n      const filteredPosts: IPost[] = [];\n      state.posts.forEach(post => {\n        if (post.title.includes(filterBy) || post.body.includes(filterBy) || post.id === +filterBy) {\n          filteredPosts.push(post);\n        }\n      });\n\n      setPosts(filterPosts);\n    },\n    setPosts(state, action: PayloadAction<IPost[]>) {\n      state.posts = action.payload.length ? action.payload : [];\n    },\n  },\n});\n\nexport const { setPosts, filterPosts } = postsSlice.actions;\nexport default postsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAM7C;AAED,MAAMC,YAAyB,GAAG;EAChCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAEC,MAA6B,EAAE;MAChD,MAAMC,QAAQ,GAAGD,MAAM,CAACE,OAAO;MAC/B,MAAMC,aAAsB,GAAG,EAAE;MACjCJ,KAAK,CAACL,KAAK,CAACU,OAAO,CAACC,IAAI,IAAI;QAC1B,IAAIA,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACN,QAAQ,CAAC,IAAII,IAAI,CAACG,IAAI,CAACD,QAAQ,CAACN,QAAQ,CAAC,IAAII,IAAI,CAACI,EAAE,KAAK,CAACR,QAAQ,EAAE;UAC1FE,aAAa,CAACO,IAAI,CAACL,IAAI,CAAC;QAC1B;MACF,CAAC,CAAC;MAEFM,QAAQ,CAACb,WAAW,CAAC;IACvB,CAAC;IACDa,QAAQA,CAACZ,KAAK,EAAEC,MAA8B,EAAE;MAC9CD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACE,OAAO,CAACU,MAAM,GAAGZ,MAAM,CAACE,OAAO,GAAG,EAAE;IAC3D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAES,QAAQ;EAAEb;AAAY,CAAC,GAAGH,UAAU,CAACkB,OAAO;AAC3D,eAAelB,UAAU,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}