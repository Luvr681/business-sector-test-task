{"ast":null,"code":"var _jsxFileName = \"/home/lino/Documents/projects/business-sector-test-task/src/components/NavBar.tsx\",\n  _s = $RefreshSig$();\nimport { useAppSelector } from '../hooks/storeHooks';\nimport { config } from '../config.d';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useAppDispatch } from '../hooks/storeHooks';\nimport { setPostPageCount } from '../store/postPageCount';\nimport { Link } from 'react-router-dom';\nimport { defineNavBarLimits } from '../lib/defineNavBarLimits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NavBar({\n  navigationLimits,\n  setNavigationLimits\n}) {\n  _s();\n  const dispatch = useAppDispatch();\n  const postPageCount = useParams().postPageCount || 0;\n  const [posts, searchString] = useAppSelector(state => {\n    return [state.posts.posts, state.searchString.searchString];\n  });\n  const [shownPosts, setShownPosts] = useState(posts);\n  const [maxPagesCount, setMaxPagesCount] = useState(shownPosts.length / config.maxPostsQuantity || 1);\n  useEffect(() => {\n    dispatch(setPostPageCount(+postPageCount));\n  }, []);\n  useEffect(() => {\n    // const filteredPosts = posts.filter(post => filterPostsBy(post, searchString.trim()));\n    const filteredPosts = posts;\n    console.log(filteredPosts);\n    setShownPosts(filteredPosts);\n    setMaxPagesCount(filteredPosts.length / config.maxPostsQuantity || 1);\n  }, [posts, searchString]);\n  useEffect(() => {\n    const [min, max] = defineNavBarLimits(+postPageCount, maxPagesCount);\n    setNavigationLimits({\n      min,\n      max\n    });\n  }, [postPageCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-between w-11/12 mx-auto py-4 px-4\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/' + Math.max(+postPageCount - 1, 1),\n      className: \"text-3xl font-semibold\",\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center\",\n      children: Array(maxPagesCount).fill(0).map((_, idx) => idx + 1).slice(navigationLimits.min, navigationLimits.max).map(pageCount => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          className: `mr-4 font-bold italic text-lg color-${pageCount === +postPageCount ? \"green\" : \"gray\"}`,\n          to: '/' + pageCount,\n          children: pageCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/' + Math.min(+postPageCount + 1, maxPagesCount),\n      className: \"text-3xl font-semibold\",\n      children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"RWlxpMNEScaDS3eb51XexuUU6PE=\", false, function () {\n  return [useAppDispatch, useParams, useAppSelector];\n});\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["useAppSelector","config","useParams","useEffect","useState","useAppDispatch","setPostPageCount","Link","defineNavBarLimits","jsxDEV","_jsxDEV","NavBar","navigationLimits","setNavigationLimits","_s","dispatch","postPageCount","posts","searchString","state","shownPosts","setShownPosts","maxPagesCount","setMaxPagesCount","length","maxPostsQuantity","filteredPosts","console","log","min","max","className","children","to","Math","fileName","_jsxFileName","lineNumber","columnNumber","Array","fill","map","_","idx","slice","pageCount","_c","$RefreshReg$"],"sources":["/home/lino/Documents/projects/business-sector-test-task/src/components/NavBar.tsx"],"sourcesContent":["import { useAppSelector } from '../hooks/storeHooks';\nimport { RootState } from '../store';\nimport { config } from '../config.d';\nimport { useParams } from 'react-router-dom';\n\nimport { useEffect, useState } from 'react';\n\nimport { useAppDispatch } from '../hooks/storeHooks';\nimport { setPostPageCount } from '../store/postPageCount';\nimport { Link } from 'react-router-dom';\nimport { filterPostsBy } from '../lib/filterPostsBy';\nimport { INavigationLimits, IPost } from '../types';\nimport { defineNavBarLimits } from '../lib/defineNavBarLimits';\n\ninterface IProps {\n  navigationLimits: INavigationLimits;\n  setNavigationLimits: React.Dispatch<React.SetStateAction<INavigationLimits>>;\n}\n\nexport function NavBar({ navigationLimits, setNavigationLimits }: IProps) {\n  const dispatch = useAppDispatch();\n\n  const postPageCount = useParams().postPageCount || 0;\n  const [posts, searchString] = useAppSelector((state: RootState) => {\n    return [state.posts.posts, state.searchString.searchString]\n  });\n  const [shownPosts, setShownPosts] = useState<IPost[]>(posts);\n  const [maxPagesCount, setMaxPagesCount] = useState<number>(shownPosts.length / config.maxPostsQuantity || 1);\n\n  useEffect(() => {\n    dispatch(setPostPageCount(+postPageCount));\n  }, []);\n\n  useEffect(() => {\n    // const filteredPosts = posts.filter(post => filterPostsBy(post, searchString.trim()));\n    const filteredPosts = posts;\n\n    console.log(filteredPosts);\n    setShownPosts(filteredPosts);\n    setMaxPagesCount(filteredPosts.length / config.maxPostsQuantity || 1);\n  }, [posts, searchString]);\n\n  useEffect(() => {\n    const [min, max] = defineNavBarLimits(+postPageCount, maxPagesCount);\n\n    setNavigationLimits({ min, max });\n  }, [postPageCount]);\n\n  return (\n    <div className='flex items-center justify-between w-11/12 mx-auto py-4 px-4'>\n      <Link to={'/' + Math.max((+postPageCount - 1), 1)} className='text-3xl font-semibold'>Назад</Link>\n      <div className='flex items-center justify-center'>\n        {\n          Array(maxPagesCount)\n            .fill(0)\n            .map((_, idx) => idx + 1)\n            .slice(navigationLimits.min, navigationLimits.max)\n            .map(pageCount => {\n              return (\n                <Link\n                  className={`mr-4 font-bold italic text-lg color-${pageCount === +postPageCount ? \"green\" : \"gray\"}`}\n                  to={'/' + pageCount}>\n                  {pageCount}\n                </Link>\n              );\n            })\n        }\n      </div>\n      <Link to={'/' + Math.min((+postPageCount + 1), maxPagesCount)} className='text-3xl font-semibold'>Далее</Link>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}