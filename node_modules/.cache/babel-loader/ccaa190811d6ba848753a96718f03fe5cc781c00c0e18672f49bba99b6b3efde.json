{"ast":null,"code":"var _jsxFileName = \"/home/lino/Documents/projects/business-sector-test-task/src/components/NavBar.tsx\",\n  _s = $RefreshSig$();\nimport { useAppSelector } from '../hooks/storeHooks';\nimport { config } from '../config.d';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useAppDispatch } from '../hooks/storeHooks';\nimport { setPostPageCount } from '../store/postPageCount';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NavBar() {\n  _s();\n  const dispatch = useAppDispatch();\n  const postPageCount = useParams().postPageCount || 0;\n  const posts = useAppSelector(state => state.posts.posts);\n  const pageNumbersCount = posts.length / config.maxPostsQuantity;\n  useEffect(() => {\n    dispatch(setPostPageCount(+postPageCount));\n  }, []);\n  const definePagePaginationButtonsIdxs = () => {\n    let start = 0;\n    if (+postPageCount - Math.floor(config.maxNavBarPageButtonsCount / 2) > 0) {\n      start = Math.max(+postPageCount - Math.floor(config.maxNavBarPageButtonsCount / 2) - 1, 0);\n    }\n    return [start, Math.max(start + 1 + (config.maxNavBarPageButtonsCount - +postPageCount), config.maxNavBarPageButtonsCount)];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-between w-11/12 mx-auto py-4 px-4\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: '/' + Math.max(+postPageCount - 1, 1),\n      className: \"text-3xl font-semibold\",\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center\",\n      children: Array(pageNumbersCount).fill(0).map((_, idx) => idx + 1)\n      // .slice(Math.min(+postPageCount - 1, Math.floor(config.maxNavBarPageButtonsCount / 2)), Math.floor((config.maxNavBarPageButtonsCount + (+postPageCount - 1))))\n      .slice(definePagePaginationButtonsIdxs()[0], definePagePaginationButtonsIdxs()[1]).map(pageCount => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          className: `mr-4 font-bold italic text-lg color-${pageCount === +postPageCount ? \"green\" : \"gray\"}`,\n          to: '/' + pageCount,\n          children: pageCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/' + Math.min(+postPageCount + 1, pageNumbersCount),\n      className: \"text-3xl font-semibold\",\n      children: \"\\u0414\\u0430\\u043B\\u0435\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"EbDTvohixnEwSSjgVqIPUuOg2nQ=\", false, function () {\n  return [useAppDispatch, useParams, useAppSelector];\n});\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["useAppSelector","config","useParams","useEffect","useAppDispatch","setPostPageCount","Link","jsxDEV","_jsxDEV","NavBar","_s","dispatch","postPageCount","posts","state","pageNumbersCount","length","maxPostsQuantity","definePagePaginationButtonsIdxs","start","Math","floor","maxNavBarPageButtonsCount","max","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","Array","fill","map","_","idx","slice","pageCount","min","_c","$RefreshReg$"],"sources":["/home/lino/Documents/projects/business-sector-test-task/src/components/NavBar.tsx"],"sourcesContent":["import { useAppSelector } from '../hooks/storeHooks';\nimport { RootState } from '../store';\nimport { config } from '../config.d';\nimport { useParams } from 'react-router-dom';\n\nimport { useEffect } from 'react';\n\nimport { useAppDispatch } from '../hooks/storeHooks';\nimport { setPostPageCount } from '../store/postPageCount';\nimport { Link } from 'react-router-dom';\n\nexport function NavBar() {\n  const dispatch = useAppDispatch();\n\n  const postPageCount = useParams().postPageCount || 0;\n  const posts = useAppSelector((state: RootState) => state.posts.posts);\n  const pageNumbersCount = posts.length / config.maxPostsQuantity;\n\n  useEffect(() => {\n    dispatch(setPostPageCount(+postPageCount));\n  }, []);\n\n  const definePagePaginationButtonsIdxs = () => {\n    let start = 0;\n    if (+postPageCount - Math.floor(config.maxNavBarPageButtonsCount / 2) > 0) {\n      start = Math.max(+postPageCount - Math.floor(config.maxNavBarPageButtonsCount / 2) - 1, 0);\n    }\n    return [start, Math.max(start + 1 + (config.maxNavBarPageButtonsCount - (+postPageCount)), config.maxNavBarPageButtonsCount)];\n  }\n\n  return (\n    <div className='flex items-center justify-between w-11/12 mx-auto py-4 px-4'>\n      <Link to={'/' + Math.max((+postPageCount - 1), 1)} className='text-3xl font-semibold'>Назад</Link>\n      <div className='flex items-center justify-center'>\n        {\n          Array(pageNumbersCount)\n            .fill(0)\n            .map((_, idx) => idx + 1)\n            // .slice(Math.min(+postPageCount - 1, Math.floor(config.maxNavBarPageButtonsCount / 2)), Math.floor((config.maxNavBarPageButtonsCount + (+postPageCount - 1))))\n            .slice(definePagePaginationButtonsIdxs()[0], definePagePaginationButtonsIdxs()[1])\n            .map(pageCount => {\n              return (\n                <Link\n                  className={`mr-4 font-bold italic text-lg color-${pageCount === +postPageCount ? \"green\" : \"gray\"}`}\n                  to={'/' + pageCount}>\n                  {pageCount}\n                </Link>\n              );\n            })\n        }\n      </div>\n      <Link to={'/' + Math.min((+postPageCount + 1), pageNumbersCount)} className='text-3xl font-semibold'>Далее</Link>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,qBAAqB;AAEpD,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,SAAS,QAAQ,OAAO;AAEjC,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGP,cAAc,CAAC,CAAC;EAEjC,MAAMQ,aAAa,GAAGV,SAAS,CAAC,CAAC,CAACU,aAAa,IAAI,CAAC;EACpD,MAAMC,KAAK,GAAGb,cAAc,CAAEc,KAAgB,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EACrE,MAAME,gBAAgB,GAAGF,KAAK,CAACG,MAAM,GAAGf,MAAM,CAACgB,gBAAgB;EAE/Dd,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACN,gBAAgB,CAAC,CAACO,aAAa,CAAC,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,+BAA+B,GAAGA,CAAA,KAAM;IAC5C,IAAIC,KAAK,GAAG,CAAC;IACb,IAAI,CAACP,aAAa,GAAGQ,IAAI,CAACC,KAAK,CAACpB,MAAM,CAACqB,yBAAyB,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;MACzEH,KAAK,GAAGC,IAAI,CAACG,GAAG,CAAC,CAACX,aAAa,GAAGQ,IAAI,CAACC,KAAK,CAACpB,MAAM,CAACqB,yBAAyB,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC5F;IACA,OAAO,CAACH,KAAK,EAAEC,IAAI,CAACG,GAAG,CAACJ,KAAK,GAAG,CAAC,IAAIlB,MAAM,CAACqB,yBAAyB,GAAI,CAACV,aAAc,CAAC,EAAEX,MAAM,CAACqB,yBAAyB,CAAC,CAAC;EAC/H,CAAC;EAED,oBACEd,OAAA;IAAKgB,SAAS,EAAC,6DAA6D;IAAAC,QAAA,gBAC1EjB,OAAA,CAACF,IAAI;MAACoB,EAAE,EAAE,GAAG,GAAGN,IAAI,CAACG,GAAG,CAAE,CAACX,aAAa,GAAG,CAAC,EAAG,CAAC,CAAE;MAACY,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClGtB,OAAA;MAAKgB,SAAS,EAAC,kCAAkC;MAAAC,QAAA,EAE7CM,KAAK,CAAChB,gBAAgB,CAAC,CACpBiB,IAAI,CAAC,CAAC,CAAC,CACPC,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAKA,GAAG,GAAG,CAAC;MACxB;MAAA,CACCC,KAAK,CAAClB,+BAA+B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEA,+BAA+B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjFe,GAAG,CAACI,SAAS,IAAI;QAChB,oBACE7B,OAAA,CAACF,IAAI;UACHkB,SAAS,EAAG,uCAAsCa,SAAS,KAAK,CAACzB,aAAa,GAAG,OAAO,GAAG,MAAO,EAAE;UACpGc,EAAE,EAAE,GAAG,GAAGW,SAAU;UAAAZ,QAAA,EACnBY;QAAS;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAEX,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC,eACNtB,OAAA,CAACF,IAAI;MAACoB,EAAE,EAAE,GAAG,GAAGN,IAAI,CAACkB,GAAG,CAAE,CAAC1B,aAAa,GAAG,CAAC,EAAGG,gBAAgB,CAAE;MAACS,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9G,CAAC;AAEV;AAACpB,EAAA,CA3CeD,MAAM;EAAA,QACHL,cAAc,EAETF,SAAS,EACjBF,cAAc;AAAA;AAAAuC,EAAA,GAJd9B,MAAM;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}