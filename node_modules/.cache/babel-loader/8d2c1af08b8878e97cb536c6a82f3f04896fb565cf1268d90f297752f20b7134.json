{"ast":null,"code":"var _jsxFileName = \"/home/lino/Documents/projects/business-sector-test-task/src/components/Table.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../hooks/storeHooks';\nimport { Post } from './Post';\nimport { TableHeaderTitle } from './TableHeaderTitle';\nimport { config } from '../config.d';\nimport { useParams } from 'react-router-dom';\nimport { filterPostsBy } from '../lib/filterPostsBy';\nimport { sortPosts } from '../store/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Table() {\n  _s();\n  const dispatch = useAppDispatch();\n  const [sortBy, setSortBy] = useState('id');\n  const [shownPosts, setShownPosts] = useState([]);\n  const [posts, searchString] = useAppSelector(state => [state.posts.posts, state.searchString.searchString]);\n  const postPageCount = useParams().postPageCount || 0;\n  const tableHeaderTitles = ['ID', 'Заголовок', 'Описание'];\n  useEffect(() => {\n    const startIdx = (+postPageCount - 1) * config.maxPostsQuantity;\n    const quantity = +postPageCount * config.maxPostsQuantity;\n    setShownPosts(posts.filter(post => filterPostsBy(post, searchString.trim())).slice(startIdx, quantity));\n  }, [postPageCount, posts, searchString]);\n  useEffect(() => {\n    dispatch(sortPosts(sortBy));\n  }, [sortBy]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"bg-[#474955] text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"w-full\",\n        children: tableHeaderTitles.length && tableHeaderTitles.map((title, idx) => {\n          return /*#__PURE__*/_jsxDEV(TableHeaderTitle, {\n            setSortBy: setSortBy,\n            title: title\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: shownPosts.length && shownPosts.map((post, idx) => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"Br1YCDLtMbnNRRcTLq5G7OaOKOs=\", false, function () {\n  return [useAppDispatch, useAppSelector, useParams];\n});\n_c = Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["useEffect","useState","useAppDispatch","useAppSelector","Post","TableHeaderTitle","config","useParams","filterPostsBy","sortPosts","jsxDEV","_jsxDEV","Table","_s","dispatch","sortBy","setSortBy","shownPosts","setShownPosts","posts","searchString","state","postPageCount","tableHeaderTitles","startIdx","maxPostsQuantity","quantity","filter","post","trim","slice","className","children","length","map","title","idx","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lino/Documents/projects/business-sector-test-task/src/components/Table.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../hooks/storeHooks';\nimport { RootState } from '../store';\nimport { IPost } from '../types';\nimport { Post } from './Post';\nimport { TableHeaderTitle } from './TableHeaderTitle';\n\nimport { config } from '../config.d';\nimport { useParams } from 'react-router-dom';\nimport { filterPostsBy } from '../lib/filterPostsBy';\nimport { sortPosts } from '../store/posts';\n\n\nexport function Table() {\n  const dispatch = useAppDispatch();\n  const [sortBy, setSortBy] = useState<string>('id');\n  const [shownPosts, setShownPosts] = useState<IPost[]>([]);\n  const [posts, searchString] = useAppSelector((state: RootState) => [state.posts.posts, state.searchString.searchString]);\n  const postPageCount = useParams().postPageCount || 0;\n  const tableHeaderTitles: string[] = [\n    'ID', 'Заголовок', 'Описание'\n  ];\n\n  useEffect(() => {\n    const startIdx = (+postPageCount - 1) * config.maxPostsQuantity;\n    const quantity = +postPageCount * config.maxPostsQuantity;\n\n    setShownPosts(posts\n      .filter(post => filterPostsBy(post, searchString.trim()))\n      .slice(startIdx, quantity));\n  }, [postPageCount, posts, searchString]);\n\n  useEffect(() => {\n    dispatch(sortPosts(sortBy));\n  }, [sortBy]);\n\n  return (\n    <table className=\"\">\n      <thead className='bg-[#474955] text-white'>\n        <tr className='w-full'>\n          {\n            tableHeaderTitles.length && tableHeaderTitles.map((title, idx) => {\n              return <TableHeaderTitle setSortBy={setSortBy} title={title} key={idx} />;\n            })\n          }\n        </tr>\n      </thead>\n      <tbody>\n        {\n          shownPosts.length && shownPosts.map((post, idx) => {\n            return <Post post={post} key={idx} />\n          })\n        }\n      </tbody>\n    </table>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}