{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n;\nconst initialState = {\n  posts: []\n};\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    setPosts(state, action) {\n      state.posts = action.payload;\n    }\n  }\n});\nexport const {\n  setPosts\n} = postsSlice.actions;\nexport const selectCount = state => state.posts;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","posts","postsSlice","name","reducers","setPosts","state","action","payload","actions","selectCount","reducer"],"sources":["/home/lino/Documents/projects/business-sector-test-task/src/store/posts.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\nimport type { RootState } from './index';\nimport { IPost } from '../types';\n\nexport interface IPostsState {\n  posts: IPost[];\n};\n\nconst initialState: IPostsState = {\n  posts: [],\n};\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    setPosts(state, action: PayloadAction<IPost[]>) {\n      state.posts = action.payload;\n    },\n  },\n});\n\nexport const { setPosts } = postsSlice.actions;\nexport const selectCount = (state: RootState) => state.posts;\nexport default postsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAO7C;AAED,MAAMC,YAAyB,GAAG;EAChCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,UAAU,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE;IACRC,QAAQA,CAACC,KAAK,EAAEC,MAA8B,EAAE;MAC9CD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAS,CAAC,GAAGH,UAAU,CAACO,OAAO;AAC9C,OAAO,MAAMC,WAAW,GAAIJ,KAAgB,IAAKA,KAAK,CAACL,KAAK;AAC5D,eAAeC,UAAU,CAACS,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}